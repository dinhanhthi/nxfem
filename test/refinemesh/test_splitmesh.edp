// Mesh
real x0=0, x1=0.5, y0=0, y1=0.5;
int n=20;
mesh Th = square(n,n,[x0+(x1-x0)*x,y0+(y1-y0)*y]);
plot(Th, wait=1, cmm="1");

// split mesh (only 1 func)
// func f = 1 + (1 + 2*(y-1.5)^2)*(x<0.5) + (1 + 2*(y-1.5)^2)*(x>=0.5);
// func f = 1 + (1 + (y-1.5)^2);
real bound = 0.1;
real bound2 = 0.2;


mesh Th1, Th2, Th3, Th4;

func f1 = 1 + ((y-0.5)^2)*(x<bound) 
      + (1 + (y-1.5)^2)*(x>=bound & x<=x1-bound) 
      + 1 + ((y-0.5)^2)*(x>x1-bound);

// func f1 = 1 + ((y-0.5)^2)*(x<bound) + (1 + (y-1.5)^2)*(x>=bound & x<=x1-bound) + 1 + ((y-0.5)^2)*(x>x1-bound);
// func f1 = 1 + (1 + 2*(y-1.5)^2)*(x<0.5) + (1 + 2*(y-1.5)^2)*(x>=0.5);

// Th1 = splitmesh(Th, f1);
// plot(Th1, wait=1, cmm="Th1");

// func f2 = (1 + (y-0.5)^2)*(x<bound) 
//       + (1 + (y-1.5)^2)*(x>=bound & x<=x1-bound) 
//       + (1 + (y-0.5)^2)*(x>x1-bound);
// Th2 = splitmesh(Th, f2);
// plot(Th2, wait=1, cmm="Th2");

// func f3 = (1 + (y-0.5)^2)*(x<bound) 
//         + (1 + (y-1.5)^2)*(x>=bound & x<=bound2) 
//         + (1 + 2*(y-1.5)^2)*(x>=bound2 & x<=x1-bound2)
//         + (1 + (y-1.5)^2)*(x>x1-bound2 & x<=x1-bound)
//         + (1 + (y-0.5)^2)*(x>x1-bound); // with bound2
// Th3 = splitmesh(Th, f3);
// plot(Th3, wait=1, cmm="Th3");

func f4 = 1 + ((y-1)^2)*(x<bound) 
        + (1 + 2*(y-1.5)^2)*(x>=bound & x<=bound2) 
        + (1 + 3*(y-1.5)^2)*(x>=bound2 & x<=x1-bound2)
        + (1 + 2*(y-1.5)^2)*(x>x1-bound2 & x<=x1-bound)
        + 1 + ((y-1)^2)*(x>x1-bound); // with bound2
Th4 = splitmesh(Th, f4);
plot(Th4, wait=1, cmm="Th4");

// savemesh(Th,"Th.msh");


