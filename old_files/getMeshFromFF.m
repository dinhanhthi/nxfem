function [points,edges,triangles] = getMeshFromFF(file)
% Get the mesh generated by FreeFem++
% Input: file mesh.msh created from FreeFem++
% Output: triplets describing the mesh in matlab



%% ========================================================
% IMPORT FROM FILE
% =========================================================
rawData = importdata(file);

% For some simple files (such as a CSV or JPEG files), IMPORTDATA might
% return a simple array.  If so, generate a structure so that the output
% matches that from the Import Wizard.
[~,name] = fileparts(file);
newData.(matlab.lang.makeValidName(name)) = rawData; % from genvarname

% Create new variables in the base workspace from those fields.
vars = fieldnames(newData);
for i = 1:length(vars)
    assignin('base', vars{i}, newData.(vars{i}));
end



%% ========================================================
% POINTS
% =========================================================
nP = rawData(1,1); % number of points
k = 0;
points = zeros(2,nP);
for i=2:nP+1
    k=k+1;
    points(1,k)=rawData(i,1);
    points(2,k)=rawData(i,2);
end



%% ========================================================
% TRIANGLES
% =========================================================
nT = rawData(1,2); % number of triangles
k=0;
triangles = zeros(2,nT);
for i=nP+2:2:nP+1+2*nT
    k=k+1;
    triangles(1,k)=rawData(i,1);
    triangles(2,k)=rawData(i,2);
    triangles(3,k)=rawData(i,3);
    triangles(4,k)=rawData(i+1,1);
end



%% ========================================================
% EDGES
% =========================================================
k = 0;
lecseg = zeros(nT*3,2);
for i=1:nT
    k=k+1;
    lecseg(k,1)=triangles(1,i);
    lecseg(k,2)=triangles(2,i);
    k=k+1;
    lecseg(k,1)=triangles(2,i);
    lecseg(k,2)=triangles(3,i);
    k=k+1;
    lecseg(k,1)=triangles(3,i);
    lecseg(k,2)=triangles(1,i);
end
nlecseg=k;

% Find the number of edge first
ndE=0; % number of double edges
dE = zeros(ndE*2,1); % store double edges
k=1;
for i=1:nlecseg
    sw=0;
    for j=1:i-1
        if((lecseg(i,1)==lecseg(j,1) && lecseg(i,2)==lecseg(j,2)) ||...
                (lecseg(i,1)==lecseg(j,2) && lecseg(i,2)==lecseg(j,1)))
            sw=1;
            dE(k)=j;
            k=k+1;
        end
    end
    if(sw==1)
        ndE = ndE+1;
        dE(k)=i;
        k=k+1;
    end
end
nbE = nlecseg - 2*ndE; % number of boundary edges

notbE = setdiff(1:nlecseg,dE); % idx of not-boundary edges

% k=0;
edges = zeros(7,nbE);
for i=1:nbE
    edges(1,i)=lecseg(notbE(i),1);
    edges(2,i)=lecseg(notbE(i),2);
    edges(3,i)=0;
    edges(4,i)=1;
    edges(5,i)=notbE(i);
    edges(6,i)=1;
    edges(7,i)=0;  
end

