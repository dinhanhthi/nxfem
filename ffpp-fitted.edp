real xi=0.5;
border C1(t=-1,xi){x=t;y=-1;};
border C2(t=xi,1){x=t;y=-1;};
border C3(t=-1,1){x=1;y=t;};
border C4(t=1,xi){x=t;y=1;};
border C5(t=xi,-1){x=t;y=1;};
border C6(t=1,-1){x=-1;y=t;};
border C7(t=-1,1){x=xi;y=t;};
real n=13;
// plot(C1(n)+C2(n)+C3(n)+C4(n)+C5(n)+C6(n)+C7(n),wait=1);
mesh Th=buildmesh((C1(n)+C2(n)+C3(n)+C4(n)+C5(n)+C6(n)+C7(n)));
// plot(Th,wait=1);
// cout << Th(-.5,0).region << endl << Th(.75,.5).region << endl;

fespace Vh(Th,P1);
macro Grad(a)[dx(a),dy(a)]//
Vh u,v;

func f=-2.;

real k1=1.;
real k2=1000.;
Vh k = (k2-k1)/3*Th(x,y).region + k1;

// plot(k,fill=1,wait=1,value=1);
fespace Ph(Th,P0);
// Ph reg=region; // only 0 (omg1) and 3 (omg2)
// plot(reg,fill=1,wait=1,value=1);
// cout << Th(0.5,-.95).region << endl; // on the interface, region=3

func uex1 = x^2/k1;
func uex2 = (x^2-xi^2)/k2 + xi^2/k1;
Vh uex = (uex2-uex1)/3*Th(x,y).region + uex1;
Ph dxuex=dx(uex);
Ph dyuex=dy(uex);
plot(uex,wait=1,fill=1,value=1,cmm="ex sol");
plot(Th,[dxuex,dyuex],wait=1,fill=1,value=1,cmm="ex sol");

problem nxfem(u,v) = int2d(Th)(k*Grad(u)'*Grad(v)) - int2d(Th)(f*v) 
					+ on(C1,C2,C3,C4,C5,C6,u=uex);
nxfem;
// plot(u,wait=1,fill=1,value=1,cmm="num sol");
Ph dxu=dx(u);
Ph dyu=dy(u);
plot(Th,[dxu,dyu],wait=1,fill=1,value=1,cmm="num sol");

// Vh dxu=dx(u);
// Vh dyu=dy(u);
// plot(Th,[dxu,dyu],wait=1,fill=1,value=1,cmm="num sol");

Vh err = u-uex;
real errL2 = sqrt(int2d(Th)(err^2));
real errH1 = sqrt(errL2^2 + int2d(Th)(k*(dx(err)^2+dy(err)^2))); // with k inside
// real errH1 = sqrt(errL2^2 + int2d(Th)(dx(err)^2+dy(err)^2)); // without k inside
cout << "errL2 = " << errL2 << endl;
cout << "errH1 = " << errH1 << endl;

cout << dxu[] << endl;
